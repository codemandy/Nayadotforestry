// Main Styles

// See the other SASS partials for typography, variables etc.
// CSS Grid is used for the layout with fallbacks for less capable browsers
// declared beforehand, and a @supports feature query to reset fallbacks when
// necessary. https://rachelandrew.co.uk/css/cheatsheets/grid-fallbacks

// the body element is our primary layout grid
body {
  background-color: $grey-bg-color;
  color: $text-color;
  height: 100vh;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 52rem) [main-end]
    minmax(1rem, 1fr) [full-end];
}

// by default, make any new children of body to span the full track
body > * {
  grid-column: full;
}


// NAVBAR

// header, the first grid row
// it is also a grid for the logo and nav
header {
  position: fixed;
  height: 4rem;
  width: 100%;
  grid-column: full;
  display: grid;
  display: flex;

  @media screen and (min-width: $screen-sm-min) {
  }
}

.nav-1 {
  display: flex;
  justify-content: flex-start;
}

.nav-2 {
  display: flex;
  justify-content: flex-end;
}

.nav-3 {
  margin-left: 1rem;
}

.nav-4 {
  display: flex;
  justify-content: flex-start;
  margin-left: 1rem;
}

.nav-5 {
  display: flex;
    justify-content: flex-end;
    margin-right: 20px;
}

//edit title of posts
  a,
  a:visited {
    color: $link-color;
    display: flex;
    justify-content: center;
    text-decoration: none;
    border: 0;
    margin-bottom: 2rem;
    @media screen and (min-width: $screen-sm-min) {

    }

  a:hover {
    color: $link-hover-color;
  }
}

img {
	display: block;
  height: calc(90vh - 45px);
}


// main menu, is a grid item / NAV CONTROLL
header > nav {
  @media screen and (min-width: $screen-sm-min) {
    width: 100%;
    background-color: $grey-bg-color;
    padding: 15px 20px 10px 20px;


  }


  ul {
    // flexbox is better than grid for distributing an unknown qty of children
    display: grid;
    grid-template-columns: 3fr 1fr 1fr 1fr 3fr;
    gap: 0px 0px;




    li {
      white-space: nowrap;
      @media screen and (min-width: $screen-sm-min) {


      }

    }
  }
}





// our main content wrapper, the width scales with font size
main {
  width: 80%;
  // max-width: 52rem;
  margin-right: auto;
  margin-left: auto;
  display: grid;
  @media screen and (min-width: $screen-md-min) {

  }
}

// reset breaking fallbacks (e.g. widths) if CSS Grid is supported
// float, inline-block, table properties are already ignored by CSS Grid
@supports (display: grid) {
  main {
  }

  .blog-title {
    // margin-top: 1.5rem;
    // margin-bottom: 5rem;


    a {
      color: $title-color;
      line-height: 25.64px;
    }
  }

  }


  .blog-container {
    margin-top: 6rem;
  }


.blog-title {

  overflow-y: scroll;
  scroll-snap-align: end;
}



// blog posts list
html[data-current="blog"] main > section {
  ul li {
    padding: 2rem 0;
    color: $text-color;
    p {
      padding-bottom: 0;
    }
  }
}

// adjacent blog posts links
nav[aria-label="Adjacent Posts"] {
  padding: 4rem 0;
  ul {
    display: flex;
    li {
      flex: 0 0 50%;
      width: auto;
      &:nth-child(2) {
        text-align: right;
      }
    }
  }
}

// contact form
html[data-current="contact"] main > form {
  display: grid;
  label {
    display: none;
  }
  input,
  textarea {
    width: 100%;
    padding: 1rem;
    margin-bottom: 2rem;
  }
  button {
    width: 100%;
  }
}

// reset CSS Grid fallbacks when they aren't required
@supports (display: grid) {
  html[data-current="contact"] main > form {
    input,
    textarea,
    button {
      width: auto;
      max-width: none;
    }
  }
}

footer {
  grid-column: full;
  display: grid;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 50rem) [main-end]
    minmax(1rem, 1fr) [full-end];
  background-color: $grey-bg-color;
  > small {
    grid-column: main;
  }
}
