// Main Styles

// See the other SASS partials for typography, variables etc.
// CSS Grid is used for the layout with fallbacks for less capable browsers
// declared beforehand, and a @supports feature query to reset fallbacks when
// necessary. https://rachelandrew.co.uk/css/cheatsheets/grid-fallbacks

// the body element is our primary layout grid
body {
  background-color: $grey-bg-color;
  color: $text-color;
  min-height: calc(90vh - 56px);
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 52rem) [main-end]
    minmax(1rem, 1fr) [full-end];
}

// by default, make any new children of body to span the full track
body > * {
  grid-column: full;
}



// our main content wrapper, the width scales with font size
main {
  max-width: 100%;



  @media screen and (min-width: $screen-md-min) {
    max-width: 100%;
    // max-width: 52rem;
    display: grid;
  }
}

// reset breaking fallbacks (e.g. widths) if CSS Grid is supported
// float, inline-block, table properties are already ignored by CSS Grid
@supports (display: grid) {
  main {
    max-width: 100%;

  }

  .blog-title {
    // margin-top: 1.5rem;
    // margin-bottom: 5rem;


    a {
      color: $title-color;
      line-height: 25.64px;
    }
  }

  }




//IMAGES ----------------------->

img {
object-fit: cover;

}




.active {
  color: $link-active-color;
}



// FOOTER -------------------------->

footer {
  grid-column: full;
  display: grid;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 50rem) [main-end]
    minmax(1rem, 1fr) [full-end];
  background-color: $grey-bg-color;
  > small {
    grid-column: main;
  }
}
